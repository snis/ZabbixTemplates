zabbix_export:
  version: '7.2'
  template_groups:
    - uuid: 6f1a2b3c0d9e47aa85f2c1d2e3f40596
      name: Templates/HTTP
  templates:
    - uuid: a3f2c1d4e5f647a8b9c0d1e2f3a45678
      template: 'Uptime Kuma by HTTP'
      name: 'Uptime Kuma by HTTP'
      description: |
        The template for receiving Uptime Kuma metrics by HTTP.
        
        1. In Kuma GUI, select Settings > API Keys > + Add API Key.
        2. Enter a name (ex. zabbix) and choose Expiry date (or Don't expire). Click Generate.
        3. Copy the key, it won't be displayed again!
        4. In Zabbix put the API token into {$KUMA.BASIC_PASS} macro.
        5. Set your Kuma GUI IP/FQDN as {$KUMA.URL} macro value.
        
        You can discuss this template or leave feedback at https://github.com/snis/ZabbixTemplates
        
        Generated by @snis
      groups:
        - name: Templates/HTTP
      items:
        - uuid: 7b9e3d2a4c5f47e2a1b0c3d4e5f6789a
          name: 'Kuma /metrics'
          type: HTTP_AGENT
          key: kuma.metrics
          delay: '{$KUMA.MASTER.DELAY}'
          history: 1h
          value_type: TEXT
          authtype: BASIC
          username: '{$KUMA.BASIC_USER}'
          password: '{$KUMA.BASIC_PASS}'
          description: 'HTTP agent item that fetches Prometheus-formatted metrics from Uptime Kuma''s /metrics endpoint. Applies preprocessing to filter relevant monitor metrics (cert days remaining, cert validity, response time, status), convert to JSON, and remove raw lines for efficiency. Output is a cleaned JSON array used by dependent discovery rules and items. Authentication via Basic auth with API key in {$KUMA.BASIC_PASS}. Timeout: 15s to handle large responses. Update interval: {$KUMA.MASTER.DELAY} (default 1m). Value type: Text (JSON string).'
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var lines = value.split('\n');
                  var filtered = lines.filter(function(line) {
                    return line.trim().startsWith('monitor_cert_days_remaining{') ||
                           line.trim().startsWith('monitor_cert_is_valid{') ||
                           line.trim().startsWith('monitor_response_time{') ||
                           line.trim().startsWith('monitor_status{');
                  }).join('\n');
                  return filtered;
            - type: PROMETHEUS_TO_JSON
              parameters:
                - ''
            - type: JAVASCRIPT
              parameters:
                - |
                  var json = JSON.parse(value);
                  var cleaned = json.map(function(obj) {
                    delete obj.line_raw;
                    return obj;
                  });
                  return JSON.stringify(cleaned);
          timeout: 15s
          url: '{$KUMA.URL}/metrics'
          headers:
            - name: Accept
              value: text/plain
          tags:
            - tag: component
              value: raw
            - tag: origin
              value: kuma
      discovery_rules:
        - uuid: c2d3e4f5a6b747c88d9e0f1a2b3c4052
          name: 'Discover TLS-enabled monitors (cert)'
          type: DEPENDENT
          key: kuma.discovery.cert
          description: 'Low-level discovery (LLD) rule that discovers HTTP monitors with TLS certificates from the filtered JSON in kuma.metrics. Uses JSONPath to extract ''monitor_cert_days_remaining'' metrics and creates macros for {#NAME} (monitor name), {#HOST} (hostname), {#TYPE} (http), {#URL} (URL), and {#VALUE} (days remaining). Dependent on kuma.metrics master item. Generates item prototypes for certificate monitoring. Update interval: inherits from master item (1m default).'
          item_prototypes:
            - uuid: 7767c1863d084c1e99cb26b35bf56e61
              name: 'Uptime Kuma cert days remaining [{#NAME}]'
              type: DEPENDENT
              key: 'kuma.monitor.cert_days[{#NAME}]'
              value_type: FLOAT
              units: d
              description: 'Dependent item that extracts the number of days remaining until the TLS certificate expires for monitor {#NAME}. Uses JSONPath on kuma.metrics JSON to filter by monitor_name and metric name (''monitor_cert_days_remaining''), then JavaScript to extract the scalar value from the array. Master item: kuma.metrics. Value type: Float, units: d (days). Update interval: inherits from master (1m default). Used for certificate expiry monitoring.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.labels.monitor_name == ''{#NAME}'' && @.name == ''monitor_cert_days_remaining'')].value'
                - type: JAVASCRIPT
                  parameters:
                    - 'return JSON.parse(value)[0];'
              master_item:
                key: kuma.metrics
              tags:
                - tag: component
                  value: cert
                - tag: component
                  value: health
                - tag: component
                  value: tls
                - tag: origin
                  value: kuma
                - tag: type
                  value: '{#TYPE}'
            - uuid: 4d9e5a1f2b2e4c9cb6a0d8e7f3c2b1a0
              name: 'Uptime Kuma cert expiry date [{#NAME}]'
              type: DEPENDENT
              key: 'kuma.monitor.cert_expire[{#NAME}]'
              value_type: TEXT
              description: 'Dependent item that calculates the exact expiry date of the TLS certificate for monitor {#NAME} based on days remaining. Uses JavaScript to add days to current date and format as YYYY-MM-DD. Dependent on ''Uptime Kuma cert days remaining [{#NAME}]'' master item. Value type: Text. Update interval: inherits from master (1m default). Discard unchanged to reduce noise. Used for proactive certificate renewal alerts.'
              preprocessing:
                - type: JAVASCRIPT
                  parameters:
                    - 'var d=new Date(Date.now()+parseFloat(value)*86400*1000);var y=d.getUTCFullYear();var m=(''0''+(d.getUTCMonth()+1)).slice(-2);var day=(''0''+d.getUTCDate()).slice(-2);return y+''-''+m+''-''+day;'
                - type: DISCARD_UNCHANGED
              master_item:
                key: 'kuma.monitor.cert_days[{#NAME}]'
              tags:
                - tag: component
                  value: cert
                - tag: component
                  value: health
                - tag: component
                  value: tls
                - tag: origin
                  value: kuma
                - tag: type
                  value: '{#TYPE}'
            - uuid: 3de40e87d76f445cb57fcc5efe2d2a16
              name: 'Uptime Kuma cert valid [{#NAME}]'
              type: DEPENDENT
              key: 'kuma.monitor.cert_valid[{#NAME}]'
              description: 'Dependent item that checks if the TLS certificate for monitor {#NAME} is still valid (1=Yes, 0=No). Uses JSONPath on kuma.metrics JSON to filter by monitor_name and metric name (''monitor_cert_is_valid''), then JavaScript to extract the scalar value. Master item: kuma.metrics. Value type: Numeric unsigned with valuemap ''Kuma boolean''. Update interval: inherits from master (1m default). Used for immediate certificate validity alerts.'
              valuemap:
                name: 'Kuma boolean'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.labels.monitor_name == ''{#NAME}'' && @.name == ''monitor_cert_is_valid'')].value'
                - type: JAVASCRIPT
                  parameters:
                    - 'return JSON.parse(value)[0];'
              master_item:
                key: kuma.metrics
              tags:
                - tag: component
                  value: cert
                - tag: component
                  value: health
                - tag: component
                  value: tls
                - tag: origin
                  value: kuma
                - tag: type
                  value: '{#TYPE}'
              trigger_prototypes:
                - uuid: 3a15139870334c0e8fb25791a303403f
                  expression: 'last(/Uptime Kuma by HTTP/kuma.monitor.cert_valid[{#NAME}])=0'
                  name: 'Uptime Kuma: Invalid certificate on {#NAME}'
                  opdata: 'Invalid certificate on {#NAME}: Validity: {Uptime Kuma by HTTP:kuma.monitor.cert_valid[{#NAME}].last()} (0=No)'
                  priority: HIGH
                  description: 'Trigger for when the TLS certificate on {#NAME} is invalid (0=No). Indicates an immediate certificate issue (e.g., expired or untrusted). Severity: High. Expression: {Uptime Kuma by HTTP:kuma.monitor.cert_valid[{#NAME}].last()}=0. Uses valuemap ''Kuma boolean'' to map 0 to ''No''. Dependent on the status item to ensure availability context. Alerts for urgent certificate replacement.'
          trigger_prototypes:
            - uuid: 58286bb88777427ba6a08470650d7e81
              expression: 'last(/Uptime Kuma by HTTP/kuma.monitor.cert_days[{#NAME}])<{$KUMA.CERT.DAYS.CRIT} and last(/Uptime Kuma by HTTP/kuma.monitor.cert_valid[{#NAME}])=1'
              name: 'Uptime Kuma: TLS cert CRITICAL on {#NAME} ({#TYPE}) (< {$KUMA.CERT.DAYS.CRIT}d)'
              opdata: 'Certificate expiry critical on {#NAME}: Days remaining: {Uptime Kuma by HTTP:kuma.monitor.cert_days[{#NAME}].last()} (threshold: {$KUMA.CERT.DAYS.CRIT} days)'
              priority: HIGH
              description: 'High severity trigger for when TLS certificate days remaining on {#NAME} falls below critical threshold ({$KUMA.CERT.DAYS.CRIT}, default 7 days). Monitors certificate health to prevent expiry outages. Severity: High. Expression: {Uptime Kuma by HTTP:kuma.monitor.cert_days[{#NAME}].last()}<{$KUMA.CERT.DAYS.CRIT}. Dependent on status item for availability.'
              tags:
                - tag: component
                  value: tls
                - tag: origin
                  value: kuma
                - tag: scope
                  value: notice
                - tag: type
                  value: '{#TYPE}'
            - uuid: 6665b6845c6c4423a5c2665c6673435c
              expression: 'last(/Uptime Kuma by HTTP/kuma.monitor.cert_days[{#NAME}])<{$KUMA.CERT.DAYS.WARN} and last(/Uptime Kuma by HTTP/kuma.monitor.cert_valid[{#NAME}])=1'
              name: 'Uptime Kuma: TLS cert expiring soon on {#NAME} ({#TYPE}) (< {$KUMA.CERT.DAYS.WARN}d)'
              opdata: 'Certificate expiry warning on {#NAME}: Days remaining: {Uptime Kuma by HTTP:kuma.monitor.cert_days[{#NAME}].last()} (threshold: {$KUMA.CERT.DAYS.WARN} days)'
              priority: WARNING
              description: 'Warning severity trigger for when TLS certificate days remaining on {#NAME} falls below warning threshold ({$KUMA.CERT.DAYS.WARN}, default 30 days). Provides early alert for certificate renewal. Severity: Warning. Expression: {Uptime Kuma by HTTP:kuma.monitor.cert_days[{#NAME}].last()}<{$KUMA.CERT.DAYS.WARN} AND {Uptime Kuma by HTTP:kuma.monitor.cert_days[{#NAME}].last()}>{$KUMA.CERT.DAYS.CRIT}. Dependent on status item.'
              dependencies:
                - name: 'Uptime Kuma: TLS cert CRITICAL on {#NAME} ({#TYPE}) (< {$KUMA.CERT.DAYS.CRIT}d)'
                  expression: 'last(/Uptime Kuma by HTTP/kuma.monitor.cert_days[{#NAME}])<{$KUMA.CERT.DAYS.CRIT} and last(/Uptime Kuma by HTTP/kuma.monitor.cert_valid[{#NAME}])=1'
              tags:
                - tag: component
                  value: tls
                - tag: origin
                  value: kuma
                - tag: scope
                  value: notice
                - tag: type
                  value: '{#TYPE}'
          master_item:
            key: kuma.metrics
          lld_macro_paths:
            - lld_macro: '{#NAME}'
              path: '$.labels[''monitor_name'']'
            - lld_macro: '{#TYPE}'
              path: '$.labels[''monitor_type'']'
            - lld_macro: '{#URL}'
              path: '$.labels[''monitor_url'']'
            - lld_macro: '{#VALUE}'
              path: $.value
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@.name == ''monitor_cert_days_remaining'')]'
        - uuid: b1c2d3e4f5a647b88c9d0e1f2a3b4051
          name: 'Discover monitors (status/latency)'
          type: DEPENDENT
          key: kuma.discovery.core
          description: 'Low-level discovery (LLD) rule that discovers all monitors from the filtered JSON in kuma.metrics. Uses JSONPath to extract ''monitor_status'' metrics and creates macros for {#NAME} (monitor name), {#HOST} (hostname), {#TYPE} (monitor type, e.g., dns, ping), {#PORT} (port), {#URL} (URL), and {#VALUE} (status: 1=UP, 0=DOWN). Dependent on kuma.metrics master item. Generates item prototypes for status and response time monitoring. Update interval: inherits from master item (1m default).'
          item_prototypes:
            - uuid: e4f5a6b7c8d947e8ab1c2d3e4f5a4054
              name: 'Uptime Kuma response time [{#NAME}]'
              type: DEPENDENT
              key: 'kuma.monitor.ping[{#NAME}]'
              value_type: FLOAT
              units: ms
              description: 'Dependent item that extracts the response time (ms) for monitor {#NAME}. Uses JSONPath on kuma.metrics JSON to filter by monitor_name and metric name (''monitor_response_time''), then JavaScript to extract the scalar value. Master item: kuma.metrics. Value type: Float, units: ms. Update interval: inherits from master (1m default). Used for latency monitoring and triggers.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.labels.monitor_name == ''{#NAME}'' && @.name == ''monitor_response_time'')].value'
                - type: JAVASCRIPT
                  parameters:
                    - 'return JSON.parse(value)[0];'
              master_item:
                key: kuma.metrics
              tags:
                - tag: component
                  value: latency
                - tag: origin
                  value: kuma
                - tag: type
                  value: '{#TYPE}'
              trigger_prototypes:
                - uuid: 202c7720b1f44ebc99329bd935bef203
                  expression: 'min(/Uptime Kuma by HTTP/kuma.monitor.ping[{#NAME}],5m)>={$KUMA.RT.CRIT:"{#TYPE}"}'
                  name: 'Uptime Kuma: Critical latency on {#NAME} ({#TYPE}) (>={$KUMA.RT.CRIT}ms)'
                  opdata: 'High latency on {#NAME} ({#TYPE}): Response time: {Uptime Kuma by HTTP:kuma.monitor.response.time[{#NAME}].last()} ms (threshold: {$KUMA.RT.CRIT:"{#TYPE}"} ms)'
                  priority: HIGH
                  description: 'Critical severity trigger for high response time on {#NAME} ({#TYPE}, e.g., dns/http). Threshold: {$KUMA.RT.CRIT:"{#TYPE}"} ms (e.g., 300ms for dns). Monitors performance degradation. Severity: High. Expression: {Uptime Kuma by HTTP:kuma.monitor.response.time[{#NAME}].last()}>={$KUMA.RT.CRIT:"{#TYPE}"}. Dependency on status trigger to suppress if DOWN.'
                  dependencies:
                    - name: 'Uptime Kuma: {#NAME} ({#TYPE}) is DOWN'
                      expression: 'last(/Uptime Kuma by HTTP/kuma.monitor.status[{#NAME}])=0'
                  tags:
                    - tag: component
                      value: latency
                    - tag: origin
                      value: kuma
                    - tag: scope
                      value: performance
                    - tag: type
                      value: '{#TYPE}'
                - uuid: 35cd870c32aa45cb8c556adfbb286fcd
                  expression: 'min(/Uptime Kuma by HTTP/kuma.monitor.ping[{#NAME}],5m)>={$KUMA.RT.WARN:"{#TYPE}"}'
                  name: 'Uptime Kuma: High latency on {#NAME} ({#TYPE}) (>={$KUMA.RT.WARN:"{#TYPE}"}ms)'
                  opdata: 'High latency on {#NAME} ({#TYPE}): Response time: {Uptime Kuma by HTTP:kuma.monitor.response.time[{#NAME}].last()} ms (threshold: {$KUMA.RT.WARN:"{#TYPE}"} ms)'
                  priority: WARNING
                  description: 'Warning severity trigger for elevated response time on {#NAME} ({#TYPE}, e.g., dns/http). Threshold: {$KUMA.RT.WARN:"{#TYPE}"} ms (e.g., 100ms for dns). Monitors performance degradation for early detection. Severity: Warning. Expression: {Uptime Kuma by HTTP:kuma.monitor.response.time[{#NAME}].last()}>={$KUMA.RT.WARN:"{#TYPE}"} AND {Uptime Kuma by HTTP:kuma.monitor.response.time[{#NAME}].last()}<{$KUMA.RT.CRIT:"{#TYPE}"}. Dependency on status trigger to suppress if DOWN.'
                  dependencies:
                    - name: 'Uptime Kuma: Critical latency on {#NAME} ({#TYPE}) (>={$KUMA.RT.CRIT}ms)'
                      expression: 'min(/Uptime Kuma by HTTP/kuma.monitor.ping[{#NAME}],5m)>={$KUMA.RT.CRIT:"{#TYPE}"}'
                    - name: 'Uptime Kuma: {#NAME} ({#TYPE}) is DOWN'
                      expression: 'last(/Uptime Kuma by HTTP/kuma.monitor.status[{#NAME}])=0'
                  tags:
                    - tag: component
                      value: latency
                    - tag: origin
                      value: kuma
                    - tag: scope
                      value: performance
                    - tag: type
                      value: '{#TYPE}'
            - uuid: d3e4f5a6b7c847d89a0b1c2d3e4f4053
              name: 'Uptime Kuma status [{#NAME}]'
              type: DEPENDENT
              key: 'kuma.monitor.status[{#NAME}]'
              history: 90d
              trends: '0'
              description: 'Dependent item that extracts the status of monitor {#NAME} (1=UP, 0=DOWN, 2=PENDING, 3=MAINTENANCE). Uses JSONPath on kuma.metrics JSON to filter by monitor_name and metric name (''monitor_status''), then JavaScript to extract the scalar value. Master item: kuma.metrics. Value type: Numeric unsigned with valuemap ''Kuma status''. Update interval: inherits from master (1m default). Used for availability monitoring and triggers.'
              valuemap:
                name: 'Kuma status'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.labels.monitor_name == ''{#NAME}'' && @.name == ''monitor_status'')].value'
                - type: JAVASCRIPT
                  parameters:
                    - 'return JSON.parse(value)[0];'
                - type: DISCARD_UNCHANGED
              master_item:
                key: kuma.metrics
              tags:
                - tag: component
                  value: health
                - tag: origin
                  value: kuma
                - tag: type
                  value: '{#TYPE}'
              trigger_prototypes:
                - uuid: c63c584cac4d45d38d60965253fe07ec
                  expression: 'last(/Uptime Kuma by HTTP/kuma.monitor.status[{#NAME}])=0'
                  name: 'Uptime Kuma: {#NAME} ({#TYPE}) is DOWN'
                  opdata: '{#NAME} ({#TYPE}) is DOWN: Status: {Uptime Kuma by HTTP:kuma.monitor.status[{#NAME}].last()} (0=DOWN)'
                  priority: HIGH
                  description: 'Critical severity trigger for when monitor {#NAME} ({#TYPE}) is DOWN (status=0). Monitors availability. Severity: High. Expression: {Uptime Kuma by HTTP:kuma.monitor.status[{#NAME}].last()}=0. Uses valuemap ''Kuma status''. No dependencies.'
                  manual_close: 'YES'
                  tags:
                    - tag: component
                      value: health
                    - tag: origin
                      value: kuma
                    - tag: scope
                      value: availability
                    - tag: type
                      value: '{#TYPE}'
          master_item:
            key: kuma.metrics
          lld_macro_paths:
            - lld_macro: '{#HOST}'
              path: '$.labels[''monitor_hostname'']'
            - lld_macro: '{#NAME}'
              path: '$.labels[''monitor_name'']'
            - lld_macro: '{#PORT}'
              path: '$.labels[''monitor_port'']'
            - lld_macro: '{#TYPE}'
              path: '$.labels[''monitor_type'']'
            - lld_macro: '{#URL}'
              path: '$.labels[''monitor_url'']'
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[?(@.name == ''monitor_status'')]'
      tags:
        - tag: origin
          value: kuma
      macros:
        - macro: '{$KUMA.BASIC_PASS}'
          description: 'If using API key, paste the key here and leave {$KUMA.BASIC_USER} empty. Otherwise use your Basic auth password.'
        - macro: '{$KUMA.BASIC_USER}'
          type: SECRET_TEXT
          description: 'Basic auth username. Leave empty when using API key as password.'
        - macro: '{$KUMA.CERT.DAYS.CRIT}'
          value: '7'
          description: 'High severity if TLS certificate days remaining is below this value.'
        - macro: '{$KUMA.CERT.DAYS.WARN}'
          value: '30'
          description: 'Warning if TLS certificate days remaining is below this value.'
        - macro: '{$KUMA.MASTER.DELAY}'
          value: 1m
          description: 'Polling interval for the HTTP master item (kuma.metrics). Increase to reduce load (e.g., 5m or 10m).'
        - macro: '{$KUMA.RT.CRIT}'
          value: '1500'
          description: 'Default fallback if no context-specific macro exists (ms). Prefer using {$KUMA.RT.CRIT:"<type>"}.'
        - macro: '{$KUMA.RT.CRIT:"dns"}'
          value: '300'
          description: 'Critical threshold for DNS monitors (ms).'
        - macro: '{$KUMA.RT.CRIT:"http"}'
          value: '1500'
          description: 'Critical threshold for HTTP monitors (ms).'
        - macro: '{$KUMA.RT.CRIT:"keyword"}'
          value: '1500'
          description: 'Critical threshold for HTTP keyword monitors (ms).'
        - macro: '{$KUMA.RT.CRIT:"ping"}'
          value: '300'
          description: 'Critical threshold for PING/ICMP monitors (ms).'
        - macro: '{$KUMA.RT.CRIT:"port"}'
          value: '600'
          description: 'Critical threshold for TCP port monitors (ms).'
        - macro: '{$KUMA.RT.CRIT:"tcp"}'
          value: '600'
          description: 'Critical threshold for TCP/port monitors (ms).'
        - macro: '{$KUMA.RT.WARN}'
          value: '500'
          description: 'Default fallback if no context-specific macro exists (ms). Prefer using {$KUMA.RT.WARN:"<type>"}.'
        - macro: '{$KUMA.RT.WARN:"dns"}'
          value: '100'
          description: 'Warn threshold for DNS monitors (ms).'
        - macro: '{$KUMA.RT.WARN:"http"}'
          value: '800'
          description: 'Warn threshold for HTTP monitors (ms).'
        - macro: '{$KUMA.RT.WARN:"keyword"}'
          value: '800'
          description: 'Warn threshold for HTTP keyword monitors (ms).'
        - macro: '{$KUMA.RT.WARN:"ping"}'
          value: '100'
          description: 'Warn threshold for PING/ICMP monitors (ms).'
        - macro: '{$KUMA.RT.WARN:"port"}'
          value: '250'
          description: 'Warn threshold for TCP port monitors (ms).'
        - macro: '{$KUMA.RT.WARN:"tcp"}'
          value: '250'
          description: 'Warn threshold for TCP/port monitors (ms).'
        - macro: '{$KUMA.URL}'
          value: 'https://kuma.example.com:3001'
          description: 'Base URL to Kuma /metrics. Example: https://kuma.example.com:3001'
      valuemaps:
        - uuid: 5f7a9c3b2d1e4abca234567890abcdef
          name: 'Kuma boolean'
          mappings:
            - value: '0'
              newvalue: 'No'
            - value: '1'
              newvalue: 'Yes'
        - uuid: 9f2a4c1d4e5f47a8b9c0d1e2f3a4567b
          name: 'Kuma status'
          mappings:
            - value: '0'
              newvalue: DOWN
            - value: '1'
              newvalue: UP
            - value: '2'
              newvalue: PENDING
            - value: '3'
              newvalue: MAINTENANCE
